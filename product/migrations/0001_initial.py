# Generated by Django 5.2 on 2025-04-27 06:32

import ckeditor.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to='uploads/%Y/%m/%d', verbose_name='Image')),
                ('name', models.CharField(max_length=50, verbose_name='Color Name')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='Color Slug')),
            ],
            options={
                'verbose_name': 'Color',
                'verbose_name_plural': 'Colors',
                'ordering': ('name',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(help_text='Enter the shoe size (e.g., 7, 8, 9, etc.).', max_length=10, unique=True, verbose_name='Size Value')),
            ],
            options={
                'verbose_name': 'Size',
                'verbose_name_plural': 'Sizes',
                'ordering': ('value',),
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True, verbose_name='Slug')),
                ('image', models.ImageField(blank=True, upload_to='uploads/%Y/%m/%d', verbose_name='Image')),
                ('is_sub', models.BooleanField(default=False, verbose_name='Is Subcategory')),
                ('sub_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='product.category', verbose_name='Sub Category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ('name',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Shoe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True, verbose_name='Slug')),
                ('image', models.ImageField(blank=True, upload_to='uploads/%Y/%m/%d', verbose_name='Image')),
                ('description', ckeditor.fields.RichTextField(verbose_name='Description')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Price')),
                ('available', models.BooleanField(default=True, verbose_name='Available')),
                ('publish', models.BooleanField(default=False, help_text='Designates whether this product should be published.', verbose_name='Publish')),
                ('discount_available', models.BooleanField(default=False, verbose_name='Discount Available')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('gender', models.CharField(choices=[('men', 'Men'), ('women', 'Women'), ('unisex', 'Unisex'), ('kids', 'Kids')], max_length=10, verbose_name='Gender')),
                ('inventory', models.PositiveIntegerField(default=10, help_text='Available stock', verbose_name='Inventory')),
                ('categories', models.ManyToManyField(related_name='shoes', to='product.category', verbose_name='Categories')),
                ('colors', models.ManyToManyField(blank=True, related_name='shoes', to='product.color', verbose_name='Colors')),
                ('sizes', models.ManyToManyField(blank=True, related_name='shoes', to='product.size', verbose_name='Sizes')),
            ],
            options={
                'ordering': ('name',),
                'abstract': False,
            },
        ),
    ]
